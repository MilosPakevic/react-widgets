{"id":"CjPY","dependencies":[{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\package.json","includedInParent":true,"mtime":1640608262491},{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\package.json","includedInParent":true,"mtime":1640596614202},{"name":"../../utilities/globals/index.js","loc":{"line":1,"column":31},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\checkFetcher.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\globals\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkFetcher = void 0;\n\nvar _index = require(\"../../utilities/globals/index.js\");\n\nvar checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw __DEV__ ? new _index.InvariantError(\"\\n\\\"fetch\\\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\\n\\nimport fetch from 'cross-fetch';\\nimport { ApolloClient, HttpLink } from '@apollo/client';\\nconst client = new ApolloClient({\\n  link: new HttpLink({ uri: '/graphql', fetch })\\n});\\n    \") : new _index.InvariantError(20);\n  }\n};\n\nexports.checkFetcher = checkFetcher;"},"sourceMaps":null,"error":null,"hash":"1ea072b4583892a26128193e01e4a8a6","cacheData":{"env":{}}}