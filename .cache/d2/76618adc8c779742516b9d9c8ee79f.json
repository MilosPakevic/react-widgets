{"id":"F6iH","dependencies":[{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\package.json","includedInParent":true,"mtime":1640608262491},{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\package.json","includedInParent":true,"mtime":1640596613181},{"name":"../../error/GraphQLError.mjs","loc":{"line":1,"column":29},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\validation\\rules\\FragmentsOnCompositeTypesRule.mjs","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\error\\GraphQLError.mjs"},{"name":"../../language/printer.mjs","loc":{"line":2,"column":22},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\validation\\rules\\FragmentsOnCompositeTypesRule.mjs","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\language\\printer.mjs"},{"name":"../../type/definition.mjs","loc":{"line":3,"column":32},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\validation\\rules\\FragmentsOnCompositeTypesRule.mjs","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\type\\definition.mjs"},{"name":"../../utilities/typeFromAST.mjs","loc":{"line":4,"column":28},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\validation\\rules\\FragmentsOnCompositeTypesRule.mjs","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\utilities\\typeFromAST.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;\n\nvar _GraphQLError = require(\"../../error/GraphQLError.mjs\");\n\nvar _printer = require(\"../../language/printer.mjs\");\n\nvar _definition = require(\"../../type/definition.mjs\");\n\nvar _typeFromAST = require(\"../../utilities/typeFromAST.mjs\");\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment: function InlineFragment(node) {\n      var typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition);\n\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          var typeStr = (0, _printer.print)(typeCondition);\n          context.reportError(new _GraphQLError.GraphQLError(\"Fragment cannot condition on non composite type \\\"\".concat(typeStr, \"\\\".\"), typeCondition));\n        }\n      }\n    },\n    FragmentDefinition: function FragmentDefinition(node) {\n      var type = (0, _typeFromAST.typeFromAST)(context.getSchema(), node.typeCondition);\n\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        var typeStr = (0, _printer.print)(node.typeCondition);\n        context.reportError(new _GraphQLError.GraphQLError(\"Fragment \\\"\".concat(node.name.value, \"\\\" cannot condition on non composite type \\\"\").concat(typeStr, \"\\\".\"), node.typeCondition));\n      }\n    }\n  };\n}"},"sourceMaps":null,"error":null,"hash":"48fef9d776173a33e6527d10954bc957","cacheData":{"env":{}}}