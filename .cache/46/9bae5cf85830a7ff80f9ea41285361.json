{"id":"IuQC","dependencies":[{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\package.json","includedInParent":true,"mtime":1640608262491},{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\package.json","includedInParent":true,"mtime":1640596614404},{"name":"tslib","loc":{"line":1,"column":40},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\graphql\\fragments.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\tslib\\tslib.es6.js"},{"name":"../globals/index.js","loc":{"line":2,"column":42},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\graphql\\fragments.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\globals\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFragmentMap = createFragmentMap;\nexports.getFragmentFromSelection = getFragmentFromSelection;\nexports.getFragmentQueryDocument = getFragmentQueryDocument;\n\nvar _tslib = require(\"tslib\");\n\nvar _index = require(\"../globals/index.js\");\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      throw __DEV__ ? new _index.InvariantError(\"Found a \".concat(definition.operation, \" operation\").concat(definition.name ? \" named '\".concat(definition.name.value, \"'\") : '', \". \") + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.') : new _index.InvariantError(41);\n    }\n\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  if (typeof actualFragmentName === 'undefined') {\n    __DEV__ ? (0, _index.invariant)(fragments.length === 1, \"Found \".concat(fragments.length, \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\")) : (0, _index.invariant)(fragments.length === 1, 42);\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  var query = (0, _tslib.__assign)((0, _tslib.__assign)({}, document), {\n    definitions: (0, _tslib.__spreadArray)([{\n      kind: 'OperationDefinition',\n      operation: 'query',\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [{\n          kind: 'FragmentSpread',\n          name: {\n            kind: 'Name',\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions, true)\n  });\n  return query;\n}\n\nfunction createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nfunction getFragmentFromSelection(selection, fragmentMap) {\n  switch (selection.kind) {\n    case 'InlineFragment':\n      return selection;\n\n    case 'FragmentSpread':\n      {\n        var fragment = fragmentMap && fragmentMap[selection.name.value];\n        __DEV__ ? (0, _index.invariant)(fragment, \"No fragment named \".concat(selection.name.value, \".\")) : (0, _index.invariant)(fragment, 43);\n        return fragment;\n      }\n\n    default:\n      return null;\n  }\n}"},"sourceMaps":null,"error":null,"hash":"1e54da8022dacf4c7d2439b125385235","cacheData":{"env":{}}}