{"id":"Q9zz","dependencies":[{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\package.json","includedInParent":true,"mtime":1640608262491},{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\package.json","includedInParent":true,"mtime":1640596614202},{"name":"tslib","loc":{"line":1,"column":33},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\tslib\\tslib.es6.js"},{"name":"../../utilities/globals/index.js","loc":{"line":2,"column":7},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\globals\\index.js"},{"name":"graphql","loc":{"line":3,"column":22},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\graphql\\index.mjs"},{"name":"../core/index.js","loc":{"line":4,"column":27},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\core\\index.js"},{"name":"../../utilities/index.js","loc":{"line":14,"column":22},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\utilities\\index.js"},{"name":"./serializeFetchParameter.js","loc":{"line":6,"column":40},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\serializeFetchParameter.js"},{"name":"./selectURI.js","loc":{"line":7,"column":26},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\selectURI.js"},{"name":"./parseAndCheckHttpResponse.js","loc":{"line":8,"column":42},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\parseAndCheckHttpResponse.js"},{"name":"./checkFetcher.js","loc":{"line":9,"column":29},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\checkFetcher.js"},{"name":"./selectHttpOptionsAndBody.js","loc":{"line":10,"column":85},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\selectHttpOptionsAndBody.js"},{"name":"./createSignalIfSupported.js","loc":{"line":11,"column":40},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createSignalIfSupported.js"},{"name":"./rewriteURIForGET.js","loc":{"line":12,"column":33},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\rewriteURIForGET.js"},{"name":"../utils/index.js","loc":{"line":13,"column":26},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\http\\createHttpLink.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\link\\utils\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createHttpLink = void 0;\n\nvar _tslib = require(\"tslib\");\n\nrequire(\"../../utilities/globals/index.js\");\n\nvar _graphql = require(\"graphql\");\n\nvar _index2 = require(\"../core/index.js\");\n\nvar _index3 = require(\"../../utilities/index.js\");\n\nvar _serializeFetchParameter = require(\"./serializeFetchParameter.js\");\n\nvar _selectURI = require(\"./selectURI.js\");\n\nvar _parseAndCheckHttpResponse = require(\"./parseAndCheckHttpResponse.js\");\n\nvar _checkFetcher = require(\"./checkFetcher.js\");\n\nvar _selectHttpOptionsAndBody = require(\"./selectHttpOptionsAndBody.js\");\n\nvar _createSignalIfSupported = require(\"./createSignalIfSupported.js\");\n\nvar _rewriteURIForGET = require(\"./rewriteURIForGET.js\");\n\nvar _index4 = require(\"../utils/index.js\");\n\nvar backupFetch = (0, _index3.maybe)(function () {\n  return fetch;\n});\n\nvar createHttpLink = function (linkOptions) {\n  if (linkOptions === void 0) {\n    linkOptions = {};\n  }\n\n  var _a = linkOptions.uri,\n      uri = _a === void 0 ? '/graphql' : _a,\n      preferredFetch = linkOptions.fetch,\n      _b = linkOptions.print,\n      print = _b === void 0 ? _selectHttpOptionsAndBody.defaultPrinter : _b,\n      includeExtensions = linkOptions.includeExtensions,\n      useGETForQueries = linkOptions.useGETForQueries,\n      _c = linkOptions.includeUnusedVariables,\n      includeUnusedVariables = _c === void 0 ? false : _c,\n      requestOptions = (0, _tslib.__rest)(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n\n  if (__DEV__) {\n    (0, _checkFetcher.checkFetcher)(preferredFetch || backupFetch);\n  }\n\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions\n    },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers\n  };\n  return new _index2.ApolloLink(function (operation) {\n    var chosenURI = (0, _selectURI.selectURI)(operation, uri);\n    var context = operation.getContext();\n    var clientAwarenessHeaders = {};\n\n    if (context.clientAwareness) {\n      var _a = context.clientAwareness,\n          name_1 = _a.name,\n          version = _a.version;\n\n      if (name_1) {\n        clientAwarenessHeaders['apollographql-client-name'] = name_1;\n      }\n\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    var contextHeaders = (0, _tslib.__assign)((0, _tslib.__assign)({}, clientAwarenessHeaders), context.headers);\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders\n    };\n\n    var _b = (0, _selectHttpOptionsAndBody.selectHttpOptionsAndBodyInternal)(operation, print, _selectHttpOptionsAndBody.fallbackHttpConfig, linkConfig, contextConfig),\n        options = _b.options,\n        body = _b.body;\n\n    if (body.variables && !includeUnusedVariables) {\n      var unusedNames_1 = new Set(Object.keys(body.variables));\n      (0, _graphql.visit)(operation.query, {\n        Variable: function (node, _key, parent) {\n          if (parent && parent.kind !== 'VariableDefinition') {\n            unusedNames_1.delete(node.name.value);\n          }\n        }\n      });\n\n      if (unusedNames_1.size) {\n        body.variables = (0, _tslib.__assign)({}, body.variables);\n        unusedNames_1.forEach(function (name) {\n          delete body.variables[name];\n        });\n      }\n    }\n\n    var controller;\n\n    if (!options.signal) {\n      var _c = (0, _createSignalIfSupported.createSignalIfSupported)(),\n          _controller = _c.controller,\n          signal = _c.signal;\n\n      controller = _controller;\n      if (controller) options.signal = signal;\n    }\n\n    var definitionIsMutation = function (d) {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n\n    if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      var _d = (0, _rewriteURIForGET.rewriteURIForGET)(chosenURI, body),\n          newURI = _d.newURI,\n          parseError = _d.parseError;\n\n      if (parseError) {\n        return (0, _index4.fromError)(parseError);\n      }\n\n      chosenURI = newURI;\n    } else {\n      try {\n        options.body = (0, _serializeFetchParameter.serializeFetchParameter)(body, 'Payload');\n      } catch (parseError) {\n        return (0, _index4.fromError)(parseError);\n      }\n    }\n\n    return new _index3.Observable(function (observer) {\n      var currentFetch = preferredFetch || (0, _index3.maybe)(function () {\n        return fetch;\n      }) || backupFetch;\n      currentFetch(chosenURI, options).then(function (response) {\n        operation.setContext({\n          response: response\n        });\n        return response;\n      }).then((0, _parseAndCheckHttpResponse.parseAndCheckHttpResponse)(operation)).then(function (result) {\n        observer.next(result);\n        observer.complete();\n        return result;\n      }).catch(function (err) {\n        if (err.name === 'AbortError') return;\n\n        if (err.result && err.result.errors && err.result.data) {\n          observer.next(err.result);\n        }\n\n        observer.error(err);\n      });\n      return function () {\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n\nexports.createHttpLink = createHttpLink;"},"sourceMaps":null,"error":null,"hash":"da5935abcbdf01fd7a264c6ac696a325","cacheData":{"env":{}}}