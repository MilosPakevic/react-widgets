{"id":"OlcC","dependencies":[{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\package.json","includedInParent":true,"mtime":1640608262491},{"name":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\cache\\package.json","includedInParent":true,"mtime":1640596614123},{"name":"optimism","loc":{"line":1,"column":20},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\cache\\inmemory\\reactiveVars.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\optimism\\lib\\bundle.esm.js"},{"name":"@wry/context","loc":{"line":2,"column":21},"parent":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@apollo\\client\\cache\\inmemory\\reactiveVars.js","resolved":"C:\\Users\\pakev\\Desktop\\r_widgets\\react-widgets\\node_modules\\@wry\\context\\lib\\context.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cacheSlot = void 0;\nexports.forgetCache = forgetCache;\nexports.makeVar = makeVar;\nexports.recallCache = recallCache;\n\nvar _optimism = require(\"optimism\");\n\nvar _context = require(\"@wry/context\");\n\nvar cacheSlot = new _context.Slot();\nexports.cacheSlot = cacheSlot;\nvar cacheInfoMap = new WeakMap();\n\nfunction getCacheInfo(cache) {\n  var info = cacheInfoMap.get(cache);\n\n  if (!info) {\n    cacheInfoMap.set(cache, info = {\n      vars: new Set(),\n      dep: (0, _optimism.dep)()\n    });\n  }\n\n  return info;\n}\n\nfunction forgetCache(cache) {\n  getCacheInfo(cache).vars.forEach(function (rv) {\n    return rv.forgetCache(cache);\n  });\n}\n\nfunction recallCache(cache) {\n  getCacheInfo(cache).vars.forEach(function (rv) {\n    return rv.attachCache(cache);\n  });\n}\n\nfunction makeVar(value) {\n  var caches = new Set();\n  var listeners = new Set();\n\n  var rv = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue;\n        caches.forEach(function (cache) {\n          getCacheInfo(cache).dep.dirty(rv);\n          broadcast(cache);\n        });\n        var oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach(function (listener) {\n          return listener(value);\n        });\n      }\n    } else {\n      var cache = cacheSlot.getValue();\n\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = function (listener) {\n    listeners.add(listener);\n    return function () {\n      listeners.delete(listener);\n    };\n  };\n\n  var attach = rv.attachCache = function (cache) {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  };\n\n  rv.forgetCache = function (cache) {\n    return caches.delete(cache);\n  };\n\n  return rv;\n}\n\nfunction broadcast(cache) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}"},"sourceMaps":null,"error":null,"hash":"0d32f1d04fe8f0b7f5860b8f1976c20d","cacheData":{"env":{}}}